/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.apache.avro.ipc;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class HandshakeRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HandshakeRequest\",\"namespace\":\"org.apache.avro.ipc\",\"fields\":[{\"name\":\"clientHash\",\"type\":{\"type\":\"fixed\",\"name\":\"MD5\",\"size\":16}},{\"name\":\"clientProtocol\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"serverHash\",\"type\":\"MD5\"},{\"name\":\"meta\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"bytes\",\"avro.java.string\":\"String\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public org.apache.avro.ipc.MD5 clientHash;
  @Deprecated public java.lang.String clientProtocol;
  @Deprecated public org.apache.avro.ipc.MD5 serverHash;
  @Deprecated public java.util.Map<java.lang.String,java.nio.ByteBuffer> meta;

  /**
   * Default constructor.
   */
  public HandshakeRequest() {}

  /**
   * All-args constructor.
   */
  public HandshakeRequest(org.apache.avro.ipc.MD5 clientHash, java.lang.String clientProtocol, org.apache.avro.ipc.MD5 serverHash, java.util.Map<java.lang.String,java.nio.ByteBuffer> meta) {
    this.clientHash = clientHash;
    this.clientProtocol = clientProtocol;
    this.serverHash = serverHash;
    this.meta = meta;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return clientHash;
    case 1: return clientProtocol;
    case 2: return serverHash;
    case 3: return meta;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: clientHash = (org.apache.avro.ipc.MD5)value$; break;
    case 1: clientProtocol = (java.lang.String)value$; break;
    case 2: serverHash = (org.apache.avro.ipc.MD5)value$; break;
    case 3: meta = (java.util.Map<java.lang.String,java.nio.ByteBuffer>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'clientHash' field.
   */
  public org.apache.avro.ipc.MD5 getClientHash() {
    return clientHash;
  }

  /**
   * Sets the value of the 'clientHash' field.
   * @param value the value to set.
   */
  public void setClientHash(org.apache.avro.ipc.MD5 value) {
    this.clientHash = value;
  }

  /**
   * Gets the value of the 'clientProtocol' field.
   */
  public java.lang.String getClientProtocol() {
    return clientProtocol;
  }

  /**
   * Sets the value of the 'clientProtocol' field.
   * @param value the value to set.
   */
  public void setClientProtocol(java.lang.String value) {
    this.clientProtocol = value;
  }

  /**
   * Gets the value of the 'serverHash' field.
   */
  public org.apache.avro.ipc.MD5 getServerHash() {
    return serverHash;
  }

  /**
   * Sets the value of the 'serverHash' field.
   * @param value the value to set.
   */
  public void setServerHash(org.apache.avro.ipc.MD5 value) {
    this.serverHash = value;
  }

  /**
   * Gets the value of the 'meta' field.
   */
  public java.util.Map<java.lang.String,java.nio.ByteBuffer> getMeta() {
    return meta;
  }

  /**
   * Sets the value of the 'meta' field.
   * @param value the value to set.
   */
  public void setMeta(java.util.Map<java.lang.String,java.nio.ByteBuffer> value) {
    this.meta = value;
  }

  /** Creates a new HandshakeRequest RecordBuilder */
  public static org.apache.avro.ipc.HandshakeRequest.Builder newBuilder() {
    return new org.apache.avro.ipc.HandshakeRequest.Builder();
  }
  
  /** Creates a new HandshakeRequest RecordBuilder by copying an existing Builder */
  public static org.apache.avro.ipc.HandshakeRequest.Builder newBuilder(org.apache.avro.ipc.HandshakeRequest.Builder other) {
    return new org.apache.avro.ipc.HandshakeRequest.Builder(other);
  }
  
  /** Creates a new HandshakeRequest RecordBuilder by copying an existing HandshakeRequest instance */
  public static org.apache.avro.ipc.HandshakeRequest.Builder newBuilder(org.apache.avro.ipc.HandshakeRequest other) {
    return new org.apache.avro.ipc.HandshakeRequest.Builder(other);
  }
  
  /**
   * RecordBuilder for HandshakeRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HandshakeRequest>
    implements org.apache.avro.data.RecordBuilder<HandshakeRequest> {

    private org.apache.avro.ipc.MD5 clientHash;
    private java.lang.String clientProtocol;
    private org.apache.avro.ipc.MD5 serverHash;
    private java.util.Map<java.lang.String,java.nio.ByteBuffer> meta;

    /** Creates a new Builder */
    private Builder() {
      super(org.apache.avro.ipc.HandshakeRequest.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.apache.avro.ipc.HandshakeRequest.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing HandshakeRequest instance */
    private Builder(org.apache.avro.ipc.HandshakeRequest other) {
            super(org.apache.avro.ipc.HandshakeRequest.SCHEMA$);
      if (isValidValue(fields()[0], other.clientHash)) {
        this.clientHash = data().deepCopy(fields()[0].schema(), other.clientHash);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.clientProtocol)) {
        this.clientProtocol = data().deepCopy(fields()[1].schema(), other.clientProtocol);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.serverHash)) {
        this.serverHash = data().deepCopy(fields()[2].schema(), other.serverHash);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.meta)) {
        this.meta = data().deepCopy(fields()[3].schema(), other.meta);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'clientHash' field */
    public org.apache.avro.ipc.MD5 getClientHash() {
      return clientHash;
    }
    
    /** Sets the value of the 'clientHash' field */
    public org.apache.avro.ipc.HandshakeRequest.Builder setClientHash(org.apache.avro.ipc.MD5 value) {
      validate(fields()[0], value);
      this.clientHash = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'clientHash' field has been set */
    public boolean hasClientHash() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'clientHash' field */
    public org.apache.avro.ipc.HandshakeRequest.Builder clearClientHash() {
      clientHash = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'clientProtocol' field */
    public java.lang.String getClientProtocol() {
      return clientProtocol;
    }
    
    /** Sets the value of the 'clientProtocol' field */
    public org.apache.avro.ipc.HandshakeRequest.Builder setClientProtocol(java.lang.String value) {
      validate(fields()[1], value);
      this.clientProtocol = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'clientProtocol' field has been set */
    public boolean hasClientProtocol() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'clientProtocol' field */
    public org.apache.avro.ipc.HandshakeRequest.Builder clearClientProtocol() {
      clientProtocol = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'serverHash' field */
    public org.apache.avro.ipc.MD5 getServerHash() {
      return serverHash;
    }
    
    /** Sets the value of the 'serverHash' field */
    public org.apache.avro.ipc.HandshakeRequest.Builder setServerHash(org.apache.avro.ipc.MD5 value) {
      validate(fields()[2], value);
      this.serverHash = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'serverHash' field has been set */
    public boolean hasServerHash() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'serverHash' field */
    public org.apache.avro.ipc.HandshakeRequest.Builder clearServerHash() {
      serverHash = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'meta' field */
    public java.util.Map<java.lang.String,java.nio.ByteBuffer> getMeta() {
      return meta;
    }
    
    /** Sets the value of the 'meta' field */
    public org.apache.avro.ipc.HandshakeRequest.Builder setMeta(java.util.Map<java.lang.String,java.nio.ByteBuffer> value) {
      validate(fields()[3], value);
      this.meta = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'meta' field has been set */
    public boolean hasMeta() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'meta' field */
    public org.apache.avro.ipc.HandshakeRequest.Builder clearMeta() {
      meta = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public HandshakeRequest build() {
      try {
        HandshakeRequest record = new HandshakeRequest();
        record.clientHash = fieldSetFlags()[0] ? this.clientHash : (org.apache.avro.ipc.MD5) defaultValue(fields()[0]);
        record.clientProtocol = fieldSetFlags()[1] ? this.clientProtocol : (java.lang.String) defaultValue(fields()[1]);
        record.serverHash = fieldSetFlags()[2] ? this.serverHash : (org.apache.avro.ipc.MD5) defaultValue(fields()[2]);
        record.meta = fieldSetFlags()[3] ? this.meta : (java.util.Map<java.lang.String,java.nio.ByteBuffer>) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
