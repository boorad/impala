/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.apache.avro.ipc.trace;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TimestampedEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TimestampedEvent\",\"namespace\":\"org.apache.avro.ipc.trace\",\"fields\":[{\"name\":\"timeStamp\",\"type\":\"long\"},{\"name\":\"event\",\"type\":[{\"type\":\"enum\",\"name\":\"SpanEvent\",\"symbols\":[\"SERVER_RECV\",\"SERVER_SEND\",\"CLIENT_RECV\",\"CLIENT_SEND\"]},{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long timeStamp;
  @Deprecated public java.lang.Object event;

  /**
   * Default constructor.
   */
  public TimestampedEvent() {}

  /**
   * All-args constructor.
   */
  public TimestampedEvent(java.lang.Long timeStamp, java.lang.Object event) {
    this.timeStamp = timeStamp;
    this.event = event;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timeStamp;
    case 1: return event;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timeStamp = (java.lang.Long)value$; break;
    case 1: event = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'timeStamp' field.
   */
  public java.lang.Long getTimeStamp() {
    return timeStamp;
  }

  /**
   * Sets the value of the 'timeStamp' field.
   * @param value the value to set.
   */
  public void setTimeStamp(java.lang.Long value) {
    this.timeStamp = value;
  }

  /**
   * Gets the value of the 'event' field.
   */
  public java.lang.Object getEvent() {
    return event;
  }

  /**
   * Sets the value of the 'event' field.
   * @param value the value to set.
   */
  public void setEvent(java.lang.Object value) {
    this.event = value;
  }

  /** Creates a new TimestampedEvent RecordBuilder */
  public static org.apache.avro.ipc.trace.TimestampedEvent.Builder newBuilder() {
    return new org.apache.avro.ipc.trace.TimestampedEvent.Builder();
  }
  
  /** Creates a new TimestampedEvent RecordBuilder by copying an existing Builder */
  public static org.apache.avro.ipc.trace.TimestampedEvent.Builder newBuilder(org.apache.avro.ipc.trace.TimestampedEvent.Builder other) {
    return new org.apache.avro.ipc.trace.TimestampedEvent.Builder(other);
  }
  
  /** Creates a new TimestampedEvent RecordBuilder by copying an existing TimestampedEvent instance */
  public static org.apache.avro.ipc.trace.TimestampedEvent.Builder newBuilder(org.apache.avro.ipc.trace.TimestampedEvent other) {
    return new org.apache.avro.ipc.trace.TimestampedEvent.Builder(other);
  }
  
  /**
   * RecordBuilder for TimestampedEvent instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TimestampedEvent>
    implements org.apache.avro.data.RecordBuilder<TimestampedEvent> {

    private long timeStamp;
    private java.lang.Object event;

    /** Creates a new Builder */
    private Builder() {
      super(org.apache.avro.ipc.trace.TimestampedEvent.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.apache.avro.ipc.trace.TimestampedEvent.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing TimestampedEvent instance */
    private Builder(org.apache.avro.ipc.trace.TimestampedEvent other) {
            super(org.apache.avro.ipc.trace.TimestampedEvent.SCHEMA$);
      if (isValidValue(fields()[0], other.timeStamp)) {
        this.timeStamp = data().deepCopy(fields()[0].schema(), other.timeStamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.event)) {
        this.event = data().deepCopy(fields()[1].schema(), other.event);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'timeStamp' field */
    public java.lang.Long getTimeStamp() {
      return timeStamp;
    }
    
    /** Sets the value of the 'timeStamp' field */
    public org.apache.avro.ipc.trace.TimestampedEvent.Builder setTimeStamp(long value) {
      validate(fields()[0], value);
      this.timeStamp = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'timeStamp' field has been set */
    public boolean hasTimeStamp() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'timeStamp' field */
    public org.apache.avro.ipc.trace.TimestampedEvent.Builder clearTimeStamp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'event' field */
    public java.lang.Object getEvent() {
      return event;
    }
    
    /** Sets the value of the 'event' field */
    public org.apache.avro.ipc.trace.TimestampedEvent.Builder setEvent(java.lang.Object value) {
      validate(fields()[1], value);
      this.event = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'event' field has been set */
    public boolean hasEvent() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'event' field */
    public org.apache.avro.ipc.trace.TimestampedEvent.Builder clearEvent() {
      event = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public TimestampedEvent build() {
      try {
        TimestampedEvent record = new TimestampedEvent();
        record.timeStamp = fieldSetFlags()[0] ? this.timeStamp : (java.lang.Long) defaultValue(fields()[0]);
        record.event = fieldSetFlags()[1] ? this.event : (java.lang.Object) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
