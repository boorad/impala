/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.apache.avro.ipc.trace;  
@SuppressWarnings("all")
/** * An individual span is the basic unit of testing.
   * The record is used by both \"client\" and \"server\". */
@org.apache.avro.specific.AvroGenerated
public class Span extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Span\",\"namespace\":\"org.apache.avro.ipc.trace\",\"doc\":\"* An individual span is the basic unit of testing.\\n   * The record is used by both \\\\\\\"client\\\\\\\" and \\\\\\\"server\\\\\\\".\",\"fields\":[{\"name\":\"traceID\",\"type\":{\"type\":\"fixed\",\"name\":\"ID\",\"size\":8}},{\"name\":\"spanID\",\"type\":\"ID\"},{\"name\":\"parentSpanID\",\"type\":[\"ID\",\"null\"]},{\"name\":\"messageName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"requestPayloadSize\",\"type\":\"long\"},{\"name\":\"responsePayloadSize\",\"type\":\"long\"},{\"name\":\"requestorHostname\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"responderHostname\",\"type\":[{\"type\":\"string\",\"avro.java.string\":\"String\"},\"null\"]},{\"name\":\"events\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TimestampedEvent\",\"fields\":[{\"name\":\"timeStamp\",\"type\":\"long\"},{\"name\":\"event\",\"type\":[{\"type\":\"enum\",\"name\":\"SpanEvent\",\"symbols\":[\"SERVER_RECV\",\"SERVER_SEND\",\"CLIENT_RECV\",\"CLIENT_SEND\"]},{\"type\":\"string\",\"avro.java.string\":\"String\"}]}]}}},{\"name\":\"complete\",\"type\":\"boolean\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public org.apache.avro.ipc.trace.ID traceID;
  @Deprecated public org.apache.avro.ipc.trace.ID spanID;
  @Deprecated public org.apache.avro.ipc.trace.ID parentSpanID;
  @Deprecated public java.lang.String messageName;
  @Deprecated public long requestPayloadSize;
  @Deprecated public long responsePayloadSize;
  @Deprecated public java.lang.String requestorHostname;
  @Deprecated public java.lang.String responderHostname;
  @Deprecated public java.util.List<org.apache.avro.ipc.trace.TimestampedEvent> events;
  @Deprecated public boolean complete;

  /**
   * Default constructor.
   */
  public Span() {}

  /**
   * All-args constructor.
   */
  public Span(org.apache.avro.ipc.trace.ID traceID, org.apache.avro.ipc.trace.ID spanID, org.apache.avro.ipc.trace.ID parentSpanID, java.lang.String messageName, java.lang.Long requestPayloadSize, java.lang.Long responsePayloadSize, java.lang.String requestorHostname, java.lang.String responderHostname, java.util.List<org.apache.avro.ipc.trace.TimestampedEvent> events, java.lang.Boolean complete) {
    this.traceID = traceID;
    this.spanID = spanID;
    this.parentSpanID = parentSpanID;
    this.messageName = messageName;
    this.requestPayloadSize = requestPayloadSize;
    this.responsePayloadSize = responsePayloadSize;
    this.requestorHostname = requestorHostname;
    this.responderHostname = responderHostname;
    this.events = events;
    this.complete = complete;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return traceID;
    case 1: return spanID;
    case 2: return parentSpanID;
    case 3: return messageName;
    case 4: return requestPayloadSize;
    case 5: return responsePayloadSize;
    case 6: return requestorHostname;
    case 7: return responderHostname;
    case 8: return events;
    case 9: return complete;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: traceID = (org.apache.avro.ipc.trace.ID)value$; break;
    case 1: spanID = (org.apache.avro.ipc.trace.ID)value$; break;
    case 2: parentSpanID = (org.apache.avro.ipc.trace.ID)value$; break;
    case 3: messageName = (java.lang.String)value$; break;
    case 4: requestPayloadSize = (java.lang.Long)value$; break;
    case 5: responsePayloadSize = (java.lang.Long)value$; break;
    case 6: requestorHostname = (java.lang.String)value$; break;
    case 7: responderHostname = (java.lang.String)value$; break;
    case 8: events = (java.util.List<org.apache.avro.ipc.trace.TimestampedEvent>)value$; break;
    case 9: complete = (java.lang.Boolean)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'traceID' field.
   */
  public org.apache.avro.ipc.trace.ID getTraceID() {
    return traceID;
  }

  /**
   * Sets the value of the 'traceID' field.
   * @param value the value to set.
   */
  public void setTraceID(org.apache.avro.ipc.trace.ID value) {
    this.traceID = value;
  }

  /**
   * Gets the value of the 'spanID' field.
   */
  public org.apache.avro.ipc.trace.ID getSpanID() {
    return spanID;
  }

  /**
   * Sets the value of the 'spanID' field.
   * @param value the value to set.
   */
  public void setSpanID(org.apache.avro.ipc.trace.ID value) {
    this.spanID = value;
  }

  /**
   * Gets the value of the 'parentSpanID' field.
   */
  public org.apache.avro.ipc.trace.ID getParentSpanID() {
    return parentSpanID;
  }

  /**
   * Sets the value of the 'parentSpanID' field.
   * @param value the value to set.
   */
  public void setParentSpanID(org.apache.avro.ipc.trace.ID value) {
    this.parentSpanID = value;
  }

  /**
   * Gets the value of the 'messageName' field.
   */
  public java.lang.String getMessageName() {
    return messageName;
  }

  /**
   * Sets the value of the 'messageName' field.
   * @param value the value to set.
   */
  public void setMessageName(java.lang.String value) {
    this.messageName = value;
  }

  /**
   * Gets the value of the 'requestPayloadSize' field.
   */
  public java.lang.Long getRequestPayloadSize() {
    return requestPayloadSize;
  }

  /**
   * Sets the value of the 'requestPayloadSize' field.
   * @param value the value to set.
   */
  public void setRequestPayloadSize(java.lang.Long value) {
    this.requestPayloadSize = value;
  }

  /**
   * Gets the value of the 'responsePayloadSize' field.
   */
  public java.lang.Long getResponsePayloadSize() {
    return responsePayloadSize;
  }

  /**
   * Sets the value of the 'responsePayloadSize' field.
   * @param value the value to set.
   */
  public void setResponsePayloadSize(java.lang.Long value) {
    this.responsePayloadSize = value;
  }

  /**
   * Gets the value of the 'requestorHostname' field.
   */
  public java.lang.String getRequestorHostname() {
    return requestorHostname;
  }

  /**
   * Sets the value of the 'requestorHostname' field.
   * @param value the value to set.
   */
  public void setRequestorHostname(java.lang.String value) {
    this.requestorHostname = value;
  }

  /**
   * Gets the value of the 'responderHostname' field.
   */
  public java.lang.String getResponderHostname() {
    return responderHostname;
  }

  /**
   * Sets the value of the 'responderHostname' field.
   * @param value the value to set.
   */
  public void setResponderHostname(java.lang.String value) {
    this.responderHostname = value;
  }

  /**
   * Gets the value of the 'events' field.
   */
  public java.util.List<org.apache.avro.ipc.trace.TimestampedEvent> getEvents() {
    return events;
  }

  /**
   * Sets the value of the 'events' field.
   * @param value the value to set.
   */
  public void setEvents(java.util.List<org.apache.avro.ipc.trace.TimestampedEvent> value) {
    this.events = value;
  }

  /**
   * Gets the value of the 'complete' field.
   */
  public java.lang.Boolean getComplete() {
    return complete;
  }

  /**
   * Sets the value of the 'complete' field.
   * @param value the value to set.
   */
  public void setComplete(java.lang.Boolean value) {
    this.complete = value;
  }

  /** Creates a new Span RecordBuilder */
  public static org.apache.avro.ipc.trace.Span.Builder newBuilder() {
    return new org.apache.avro.ipc.trace.Span.Builder();
  }
  
  /** Creates a new Span RecordBuilder by copying an existing Builder */
  public static org.apache.avro.ipc.trace.Span.Builder newBuilder(org.apache.avro.ipc.trace.Span.Builder other) {
    return new org.apache.avro.ipc.trace.Span.Builder(other);
  }
  
  /** Creates a new Span RecordBuilder by copying an existing Span instance */
  public static org.apache.avro.ipc.trace.Span.Builder newBuilder(org.apache.avro.ipc.trace.Span other) {
    return new org.apache.avro.ipc.trace.Span.Builder(other);
  }
  
  /**
   * RecordBuilder for Span instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Span>
    implements org.apache.avro.data.RecordBuilder<Span> {

    private org.apache.avro.ipc.trace.ID traceID;
    private org.apache.avro.ipc.trace.ID spanID;
    private org.apache.avro.ipc.trace.ID parentSpanID;
    private java.lang.String messageName;
    private long requestPayloadSize;
    private long responsePayloadSize;
    private java.lang.String requestorHostname;
    private java.lang.String responderHostname;
    private java.util.List<org.apache.avro.ipc.trace.TimestampedEvent> events;
    private boolean complete;

    /** Creates a new Builder */
    private Builder() {
      super(org.apache.avro.ipc.trace.Span.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.apache.avro.ipc.trace.Span.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Span instance */
    private Builder(org.apache.avro.ipc.trace.Span other) {
            super(org.apache.avro.ipc.trace.Span.SCHEMA$);
      if (isValidValue(fields()[0], other.traceID)) {
        this.traceID = data().deepCopy(fields()[0].schema(), other.traceID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.spanID)) {
        this.spanID = data().deepCopy(fields()[1].schema(), other.spanID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.parentSpanID)) {
        this.parentSpanID = data().deepCopy(fields()[2].schema(), other.parentSpanID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.messageName)) {
        this.messageName = data().deepCopy(fields()[3].schema(), other.messageName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.requestPayloadSize)) {
        this.requestPayloadSize = data().deepCopy(fields()[4].schema(), other.requestPayloadSize);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.responsePayloadSize)) {
        this.responsePayloadSize = data().deepCopy(fields()[5].schema(), other.responsePayloadSize);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.requestorHostname)) {
        this.requestorHostname = data().deepCopy(fields()[6].schema(), other.requestorHostname);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.responderHostname)) {
        this.responderHostname = data().deepCopy(fields()[7].schema(), other.responderHostname);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.events)) {
        this.events = data().deepCopy(fields()[8].schema(), other.events);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.complete)) {
        this.complete = data().deepCopy(fields()[9].schema(), other.complete);
        fieldSetFlags()[9] = true;
      }
    }

    /** Gets the value of the 'traceID' field */
    public org.apache.avro.ipc.trace.ID getTraceID() {
      return traceID;
    }
    
    /** Sets the value of the 'traceID' field */
    public org.apache.avro.ipc.trace.Span.Builder setTraceID(org.apache.avro.ipc.trace.ID value) {
      validate(fields()[0], value);
      this.traceID = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'traceID' field has been set */
    public boolean hasTraceID() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'traceID' field */
    public org.apache.avro.ipc.trace.Span.Builder clearTraceID() {
      traceID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'spanID' field */
    public org.apache.avro.ipc.trace.ID getSpanID() {
      return spanID;
    }
    
    /** Sets the value of the 'spanID' field */
    public org.apache.avro.ipc.trace.Span.Builder setSpanID(org.apache.avro.ipc.trace.ID value) {
      validate(fields()[1], value);
      this.spanID = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'spanID' field has been set */
    public boolean hasSpanID() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'spanID' field */
    public org.apache.avro.ipc.trace.Span.Builder clearSpanID() {
      spanID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'parentSpanID' field */
    public org.apache.avro.ipc.trace.ID getParentSpanID() {
      return parentSpanID;
    }
    
    /** Sets the value of the 'parentSpanID' field */
    public org.apache.avro.ipc.trace.Span.Builder setParentSpanID(org.apache.avro.ipc.trace.ID value) {
      validate(fields()[2], value);
      this.parentSpanID = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'parentSpanID' field has been set */
    public boolean hasParentSpanID() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'parentSpanID' field */
    public org.apache.avro.ipc.trace.Span.Builder clearParentSpanID() {
      parentSpanID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'messageName' field */
    public java.lang.String getMessageName() {
      return messageName;
    }
    
    /** Sets the value of the 'messageName' field */
    public org.apache.avro.ipc.trace.Span.Builder setMessageName(java.lang.String value) {
      validate(fields()[3], value);
      this.messageName = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'messageName' field has been set */
    public boolean hasMessageName() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'messageName' field */
    public org.apache.avro.ipc.trace.Span.Builder clearMessageName() {
      messageName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'requestPayloadSize' field */
    public java.lang.Long getRequestPayloadSize() {
      return requestPayloadSize;
    }
    
    /** Sets the value of the 'requestPayloadSize' field */
    public org.apache.avro.ipc.trace.Span.Builder setRequestPayloadSize(long value) {
      validate(fields()[4], value);
      this.requestPayloadSize = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'requestPayloadSize' field has been set */
    public boolean hasRequestPayloadSize() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'requestPayloadSize' field */
    public org.apache.avro.ipc.trace.Span.Builder clearRequestPayloadSize() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'responsePayloadSize' field */
    public java.lang.Long getResponsePayloadSize() {
      return responsePayloadSize;
    }
    
    /** Sets the value of the 'responsePayloadSize' field */
    public org.apache.avro.ipc.trace.Span.Builder setResponsePayloadSize(long value) {
      validate(fields()[5], value);
      this.responsePayloadSize = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'responsePayloadSize' field has been set */
    public boolean hasResponsePayloadSize() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'responsePayloadSize' field */
    public org.apache.avro.ipc.trace.Span.Builder clearResponsePayloadSize() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'requestorHostname' field */
    public java.lang.String getRequestorHostname() {
      return requestorHostname;
    }
    
    /** Sets the value of the 'requestorHostname' field */
    public org.apache.avro.ipc.trace.Span.Builder setRequestorHostname(java.lang.String value) {
      validate(fields()[6], value);
      this.requestorHostname = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'requestorHostname' field has been set */
    public boolean hasRequestorHostname() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'requestorHostname' field */
    public org.apache.avro.ipc.trace.Span.Builder clearRequestorHostname() {
      requestorHostname = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'responderHostname' field */
    public java.lang.String getResponderHostname() {
      return responderHostname;
    }
    
    /** Sets the value of the 'responderHostname' field */
    public org.apache.avro.ipc.trace.Span.Builder setResponderHostname(java.lang.String value) {
      validate(fields()[7], value);
      this.responderHostname = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'responderHostname' field has been set */
    public boolean hasResponderHostname() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'responderHostname' field */
    public org.apache.avro.ipc.trace.Span.Builder clearResponderHostname() {
      responderHostname = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'events' field */
    public java.util.List<org.apache.avro.ipc.trace.TimestampedEvent> getEvents() {
      return events;
    }
    
    /** Sets the value of the 'events' field */
    public org.apache.avro.ipc.trace.Span.Builder setEvents(java.util.List<org.apache.avro.ipc.trace.TimestampedEvent> value) {
      validate(fields()[8], value);
      this.events = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'events' field has been set */
    public boolean hasEvents() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'events' field */
    public org.apache.avro.ipc.trace.Span.Builder clearEvents() {
      events = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'complete' field */
    public java.lang.Boolean getComplete() {
      return complete;
    }
    
    /** Sets the value of the 'complete' field */
    public org.apache.avro.ipc.trace.Span.Builder setComplete(boolean value) {
      validate(fields()[9], value);
      this.complete = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'complete' field has been set */
    public boolean hasComplete() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'complete' field */
    public org.apache.avro.ipc.trace.Span.Builder clearComplete() {
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public Span build() {
      try {
        Span record = new Span();
        record.traceID = fieldSetFlags()[0] ? this.traceID : (org.apache.avro.ipc.trace.ID) defaultValue(fields()[0]);
        record.spanID = fieldSetFlags()[1] ? this.spanID : (org.apache.avro.ipc.trace.ID) defaultValue(fields()[1]);
        record.parentSpanID = fieldSetFlags()[2] ? this.parentSpanID : (org.apache.avro.ipc.trace.ID) defaultValue(fields()[2]);
        record.messageName = fieldSetFlags()[3] ? this.messageName : (java.lang.String) defaultValue(fields()[3]);
        record.requestPayloadSize = fieldSetFlags()[4] ? this.requestPayloadSize : (java.lang.Long) defaultValue(fields()[4]);
        record.responsePayloadSize = fieldSetFlags()[5] ? this.responsePayloadSize : (java.lang.Long) defaultValue(fields()[5]);
        record.requestorHostname = fieldSetFlags()[6] ? this.requestorHostname : (java.lang.String) defaultValue(fields()[6]);
        record.responderHostname = fieldSetFlags()[7] ? this.responderHostname : (java.lang.String) defaultValue(fields()[7]);
        record.events = fieldSetFlags()[8] ? this.events : (java.util.List<org.apache.avro.ipc.trace.TimestampedEvent>) defaultValue(fields()[8]);
        record.complete = fieldSetFlags()[9] ? this.complete : (java.lang.Boolean) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
