/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Foo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Foo\",\"fields\":[{\"name\":\"package\",\"type\":\"string\"},{\"name\":\"short\",\"type\":\"Foo\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence package$;
  @Deprecated public Foo short$;

  /**
   * Default constructor.
   */
  public Foo() {}

  /**
   * All-args constructor.
   */
  public Foo(java.lang.CharSequence package$, Foo short$) {
    this.package$ = package$;
    this.short$ = short$;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return package$;
    case 1: return short$;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: package$ = (java.lang.CharSequence)value$; break;
    case 1: short$ = (Foo)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'package$' field.
   */
  public java.lang.CharSequence getPackage$() {
    return package$;
  }

  /**
   * Sets the value of the 'package$' field.
   * @param value the value to set.
   */
  public void setPackage$(java.lang.CharSequence value) {
    this.package$ = value;
  }

  /**
   * Gets the value of the 'short$' field.
   */
  public Foo getShort$() {
    return short$;
  }

  /**
   * Sets the value of the 'short$' field.
   * @param value the value to set.
   */
  public void setShort$(Foo value) {
    this.short$ = value;
  }

  /** Creates a new Foo RecordBuilder */
  public static Foo.Builder newBuilder() {
    return new Foo.Builder();
  }
  
  /** Creates a new Foo RecordBuilder by copying an existing Builder */
  public static Foo.Builder newBuilder(Foo.Builder other) {
    return new Foo.Builder(other);
  }
  
  /** Creates a new Foo RecordBuilder by copying an existing Foo instance */
  public static Foo.Builder newBuilder(Foo other) {
    return new Foo.Builder(other);
  }
  
  /**
   * RecordBuilder for Foo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Foo>
    implements org.apache.avro.data.RecordBuilder<Foo> {

    private java.lang.CharSequence package$;
    private Foo short$;

    /** Creates a new Builder */
    private Builder() {
      super(Foo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Foo.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Foo instance */
    private Builder(Foo other) {
            super(Foo.SCHEMA$);
      if (isValidValue(fields()[0], other.package$)) {
        this.package$ = data().deepCopy(fields()[0].schema(), other.package$);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.short$)) {
        this.short$ = data().deepCopy(fields()[1].schema(), other.short$);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'package$' field */
    public java.lang.CharSequence getPackage$() {
      return package$;
    }
    
    /** Sets the value of the 'package$' field */
    public Foo.Builder setPackage$(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.package$ = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'package$' field has been set */
    public boolean hasPackage$() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'package$' field */
    public Foo.Builder clearPackage$() {
      package$ = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'short$' field */
    public Foo getShort$() {
      return short$;
    }
    
    /** Sets the value of the 'short$' field */
    public Foo.Builder setShort$(Foo value) {
      validate(fields()[1], value);
      this.short$ = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'short$' field has been set */
    public boolean hasShort$() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'short$' field */
    public Foo.Builder clearShort$() {
      short$ = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public Foo build() {
      try {
        Foo record = new Foo();
        record.package$ = fieldSetFlags()[0] ? this.package$ : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.short$ = fieldSetFlags()[1] ? this.short$ : (Foo) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
