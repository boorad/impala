/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.apache.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Interop extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Interop\",\"namespace\":\"org.apache.avro\",\"fields\":[{\"name\":\"intField\",\"type\":\"int\"},{\"name\":\"longField\",\"type\":\"long\"},{\"name\":\"stringField\",\"type\":\"string\"},{\"name\":\"boolField\",\"type\":\"boolean\"},{\"name\":\"floatField\",\"type\":\"float\"},{\"name\":\"doubleField\",\"type\":\"double\"},{\"name\":\"bytesField\",\"type\":\"bytes\"},{\"name\":\"nullField\",\"type\":\"null\"},{\"name\":\"arrayField\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"mapField\",\"type\":{\"type\":\"map\",\"values\":{\"type\":\"record\",\"name\":\"Foo\",\"fields\":[{\"name\":\"label\",\"type\":\"string\"}]}}},{\"name\":\"unionField\",\"type\":[\"boolean\",\"double\",{\"type\":\"array\",\"items\":\"bytes\"}]},{\"name\":\"enumField\",\"type\":{\"type\":\"enum\",\"name\":\"Kind\",\"symbols\":[\"A\",\"B\",\"C\"]}},{\"name\":\"fixedField\",\"type\":{\"type\":\"fixed\",\"name\":\"MD5\",\"size\":16}},{\"name\":\"recordField\",\"type\":{\"type\":\"record\",\"name\":\"Node\",\"fields\":[{\"name\":\"label\",\"type\":\"string\"},{\"name\":\"children\",\"type\":{\"type\":\"array\",\"items\":\"Node\"}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public int intField;
  @Deprecated public long longField;
  @Deprecated public java.lang.CharSequence stringField;
  @Deprecated public boolean boolField;
  @Deprecated public float floatField;
  @Deprecated public double doubleField;
  @Deprecated public java.nio.ByteBuffer bytesField;
  @Deprecated public java.lang.Void nullField;
  @Deprecated public java.util.List<java.lang.Double> arrayField;
  @Deprecated public java.util.Map<java.lang.CharSequence,org.apache.avro.Foo> mapField;
  @Deprecated public java.lang.Object unionField;
  @Deprecated public org.apache.avro.Kind enumField;
  @Deprecated public org.apache.avro.MD5 fixedField;
  @Deprecated public org.apache.avro.Node recordField;

  /**
   * Default constructor.
   */
  public Interop() {}

  /**
   * All-args constructor.
   */
  public Interop(java.lang.Integer intField, java.lang.Long longField, java.lang.CharSequence stringField, java.lang.Boolean boolField, java.lang.Float floatField, java.lang.Double doubleField, java.nio.ByteBuffer bytesField, java.lang.Void nullField, java.util.List<java.lang.Double> arrayField, java.util.Map<java.lang.CharSequence,org.apache.avro.Foo> mapField, java.lang.Object unionField, org.apache.avro.Kind enumField, org.apache.avro.MD5 fixedField, org.apache.avro.Node recordField) {
    this.intField = intField;
    this.longField = longField;
    this.stringField = stringField;
    this.boolField = boolField;
    this.floatField = floatField;
    this.doubleField = doubleField;
    this.bytesField = bytesField;
    this.nullField = nullField;
    this.arrayField = arrayField;
    this.mapField = mapField;
    this.unionField = unionField;
    this.enumField = enumField;
    this.fixedField = fixedField;
    this.recordField = recordField;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return intField;
    case 1: return longField;
    case 2: return stringField;
    case 3: return boolField;
    case 4: return floatField;
    case 5: return doubleField;
    case 6: return bytesField;
    case 7: return nullField;
    case 8: return arrayField;
    case 9: return mapField;
    case 10: return unionField;
    case 11: return enumField;
    case 12: return fixedField;
    case 13: return recordField;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: intField = (java.lang.Integer)value$; break;
    case 1: longField = (java.lang.Long)value$; break;
    case 2: stringField = (java.lang.CharSequence)value$; break;
    case 3: boolField = (java.lang.Boolean)value$; break;
    case 4: floatField = (java.lang.Float)value$; break;
    case 5: doubleField = (java.lang.Double)value$; break;
    case 6: bytesField = (java.nio.ByteBuffer)value$; break;
    case 7: nullField = (java.lang.Void)value$; break;
    case 8: arrayField = (java.util.List<java.lang.Double>)value$; break;
    case 9: mapField = (java.util.Map<java.lang.CharSequence,org.apache.avro.Foo>)value$; break;
    case 10: unionField = (java.lang.Object)value$; break;
    case 11: enumField = (org.apache.avro.Kind)value$; break;
    case 12: fixedField = (org.apache.avro.MD5)value$; break;
    case 13: recordField = (org.apache.avro.Node)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'intField' field.
   */
  public java.lang.Integer getIntField() {
    return intField;
  }

  /**
   * Sets the value of the 'intField' field.
   * @param value the value to set.
   */
  public void setIntField(java.lang.Integer value) {
    this.intField = value;
  }

  /**
   * Gets the value of the 'longField' field.
   */
  public java.lang.Long getLongField() {
    return longField;
  }

  /**
   * Sets the value of the 'longField' field.
   * @param value the value to set.
   */
  public void setLongField(java.lang.Long value) {
    this.longField = value;
  }

  /**
   * Gets the value of the 'stringField' field.
   */
  public java.lang.CharSequence getStringField() {
    return stringField;
  }

  /**
   * Sets the value of the 'stringField' field.
   * @param value the value to set.
   */
  public void setStringField(java.lang.CharSequence value) {
    this.stringField = value;
  }

  /**
   * Gets the value of the 'boolField' field.
   */
  public java.lang.Boolean getBoolField() {
    return boolField;
  }

  /**
   * Sets the value of the 'boolField' field.
   * @param value the value to set.
   */
  public void setBoolField(java.lang.Boolean value) {
    this.boolField = value;
  }

  /**
   * Gets the value of the 'floatField' field.
   */
  public java.lang.Float getFloatField() {
    return floatField;
  }

  /**
   * Sets the value of the 'floatField' field.
   * @param value the value to set.
   */
  public void setFloatField(java.lang.Float value) {
    this.floatField = value;
  }

  /**
   * Gets the value of the 'doubleField' field.
   */
  public java.lang.Double getDoubleField() {
    return doubleField;
  }

  /**
   * Sets the value of the 'doubleField' field.
   * @param value the value to set.
   */
  public void setDoubleField(java.lang.Double value) {
    this.doubleField = value;
  }

  /**
   * Gets the value of the 'bytesField' field.
   */
  public java.nio.ByteBuffer getBytesField() {
    return bytesField;
  }

  /**
   * Sets the value of the 'bytesField' field.
   * @param value the value to set.
   */
  public void setBytesField(java.nio.ByteBuffer value) {
    this.bytesField = value;
  }

  /**
   * Gets the value of the 'nullField' field.
   */
  public java.lang.Void getNullField() {
    return nullField;
  }

  /**
   * Sets the value of the 'nullField' field.
   * @param value the value to set.
   */
  public void setNullField(java.lang.Void value) {
    this.nullField = value;
  }

  /**
   * Gets the value of the 'arrayField' field.
   */
  public java.util.List<java.lang.Double> getArrayField() {
    return arrayField;
  }

  /**
   * Sets the value of the 'arrayField' field.
   * @param value the value to set.
   */
  public void setArrayField(java.util.List<java.lang.Double> value) {
    this.arrayField = value;
  }

  /**
   * Gets the value of the 'mapField' field.
   */
  public java.util.Map<java.lang.CharSequence,org.apache.avro.Foo> getMapField() {
    return mapField;
  }

  /**
   * Sets the value of the 'mapField' field.
   * @param value the value to set.
   */
  public void setMapField(java.util.Map<java.lang.CharSequence,org.apache.avro.Foo> value) {
    this.mapField = value;
  }

  /**
   * Gets the value of the 'unionField' field.
   */
  public java.lang.Object getUnionField() {
    return unionField;
  }

  /**
   * Sets the value of the 'unionField' field.
   * @param value the value to set.
   */
  public void setUnionField(java.lang.Object value) {
    this.unionField = value;
  }

  /**
   * Gets the value of the 'enumField' field.
   */
  public org.apache.avro.Kind getEnumField() {
    return enumField;
  }

  /**
   * Sets the value of the 'enumField' field.
   * @param value the value to set.
   */
  public void setEnumField(org.apache.avro.Kind value) {
    this.enumField = value;
  }

  /**
   * Gets the value of the 'fixedField' field.
   */
  public org.apache.avro.MD5 getFixedField() {
    return fixedField;
  }

  /**
   * Sets the value of the 'fixedField' field.
   * @param value the value to set.
   */
  public void setFixedField(org.apache.avro.MD5 value) {
    this.fixedField = value;
  }

  /**
   * Gets the value of the 'recordField' field.
   */
  public org.apache.avro.Node getRecordField() {
    return recordField;
  }

  /**
   * Sets the value of the 'recordField' field.
   * @param value the value to set.
   */
  public void setRecordField(org.apache.avro.Node value) {
    this.recordField = value;
  }

  /** Creates a new Interop RecordBuilder */
  public static org.apache.avro.Interop.Builder newBuilder() {
    return new org.apache.avro.Interop.Builder();
  }
  
  /** Creates a new Interop RecordBuilder by copying an existing Builder */
  public static org.apache.avro.Interop.Builder newBuilder(org.apache.avro.Interop.Builder other) {
    return new org.apache.avro.Interop.Builder(other);
  }
  
  /** Creates a new Interop RecordBuilder by copying an existing Interop instance */
  public static org.apache.avro.Interop.Builder newBuilder(org.apache.avro.Interop other) {
    return new org.apache.avro.Interop.Builder(other);
  }
  
  /**
   * RecordBuilder for Interop instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Interop>
    implements org.apache.avro.data.RecordBuilder<Interop> {

    private int intField;
    private long longField;
    private java.lang.CharSequence stringField;
    private boolean boolField;
    private float floatField;
    private double doubleField;
    private java.nio.ByteBuffer bytesField;
    private java.lang.Void nullField;
    private java.util.List<java.lang.Double> arrayField;
    private java.util.Map<java.lang.CharSequence,org.apache.avro.Foo> mapField;
    private java.lang.Object unionField;
    private org.apache.avro.Kind enumField;
    private org.apache.avro.MD5 fixedField;
    private org.apache.avro.Node recordField;

    /** Creates a new Builder */
    private Builder() {
      super(org.apache.avro.Interop.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.apache.avro.Interop.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Interop instance */
    private Builder(org.apache.avro.Interop other) {
            super(org.apache.avro.Interop.SCHEMA$);
      if (isValidValue(fields()[0], other.intField)) {
        this.intField = data().deepCopy(fields()[0].schema(), other.intField);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.longField)) {
        this.longField = data().deepCopy(fields()[1].schema(), other.longField);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.stringField)) {
        this.stringField = data().deepCopy(fields()[2].schema(), other.stringField);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.boolField)) {
        this.boolField = data().deepCopy(fields()[3].schema(), other.boolField);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.floatField)) {
        this.floatField = data().deepCopy(fields()[4].schema(), other.floatField);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.doubleField)) {
        this.doubleField = data().deepCopy(fields()[5].schema(), other.doubleField);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.bytesField)) {
        this.bytesField = data().deepCopy(fields()[6].schema(), other.bytesField);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.nullField)) {
        this.nullField = data().deepCopy(fields()[7].schema(), other.nullField);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.arrayField)) {
        this.arrayField = data().deepCopy(fields()[8].schema(), other.arrayField);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.mapField)) {
        this.mapField = data().deepCopy(fields()[9].schema(), other.mapField);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.unionField)) {
        this.unionField = data().deepCopy(fields()[10].schema(), other.unionField);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.enumField)) {
        this.enumField = data().deepCopy(fields()[11].schema(), other.enumField);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.fixedField)) {
        this.fixedField = data().deepCopy(fields()[12].schema(), other.fixedField);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.recordField)) {
        this.recordField = data().deepCopy(fields()[13].schema(), other.recordField);
        fieldSetFlags()[13] = true;
      }
    }

    /** Gets the value of the 'intField' field */
    public java.lang.Integer getIntField() {
      return intField;
    }
    
    /** Sets the value of the 'intField' field */
    public org.apache.avro.Interop.Builder setIntField(int value) {
      validate(fields()[0], value);
      this.intField = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'intField' field has been set */
    public boolean hasIntField() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'intField' field */
    public org.apache.avro.Interop.Builder clearIntField() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'longField' field */
    public java.lang.Long getLongField() {
      return longField;
    }
    
    /** Sets the value of the 'longField' field */
    public org.apache.avro.Interop.Builder setLongField(long value) {
      validate(fields()[1], value);
      this.longField = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'longField' field has been set */
    public boolean hasLongField() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'longField' field */
    public org.apache.avro.Interop.Builder clearLongField() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'stringField' field */
    public java.lang.CharSequence getStringField() {
      return stringField;
    }
    
    /** Sets the value of the 'stringField' field */
    public org.apache.avro.Interop.Builder setStringField(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.stringField = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'stringField' field has been set */
    public boolean hasStringField() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'stringField' field */
    public org.apache.avro.Interop.Builder clearStringField() {
      stringField = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'boolField' field */
    public java.lang.Boolean getBoolField() {
      return boolField;
    }
    
    /** Sets the value of the 'boolField' field */
    public org.apache.avro.Interop.Builder setBoolField(boolean value) {
      validate(fields()[3], value);
      this.boolField = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'boolField' field has been set */
    public boolean hasBoolField() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'boolField' field */
    public org.apache.avro.Interop.Builder clearBoolField() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'floatField' field */
    public java.lang.Float getFloatField() {
      return floatField;
    }
    
    /** Sets the value of the 'floatField' field */
    public org.apache.avro.Interop.Builder setFloatField(float value) {
      validate(fields()[4], value);
      this.floatField = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'floatField' field has been set */
    public boolean hasFloatField() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'floatField' field */
    public org.apache.avro.Interop.Builder clearFloatField() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'doubleField' field */
    public java.lang.Double getDoubleField() {
      return doubleField;
    }
    
    /** Sets the value of the 'doubleField' field */
    public org.apache.avro.Interop.Builder setDoubleField(double value) {
      validate(fields()[5], value);
      this.doubleField = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'doubleField' field has been set */
    public boolean hasDoubleField() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'doubleField' field */
    public org.apache.avro.Interop.Builder clearDoubleField() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'bytesField' field */
    public java.nio.ByteBuffer getBytesField() {
      return bytesField;
    }
    
    /** Sets the value of the 'bytesField' field */
    public org.apache.avro.Interop.Builder setBytesField(java.nio.ByteBuffer value) {
      validate(fields()[6], value);
      this.bytesField = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'bytesField' field has been set */
    public boolean hasBytesField() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'bytesField' field */
    public org.apache.avro.Interop.Builder clearBytesField() {
      bytesField = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'nullField' field */
    public java.lang.Void getNullField() {
      return nullField;
    }
    
    /** Sets the value of the 'nullField' field */
    public org.apache.avro.Interop.Builder setNullField(java.lang.Void value) {
      validate(fields()[7], value);
      this.nullField = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'nullField' field has been set */
    public boolean hasNullField() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'nullField' field */
    public org.apache.avro.Interop.Builder clearNullField() {
      nullField = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'arrayField' field */
    public java.util.List<java.lang.Double> getArrayField() {
      return arrayField;
    }
    
    /** Sets the value of the 'arrayField' field */
    public org.apache.avro.Interop.Builder setArrayField(java.util.List<java.lang.Double> value) {
      validate(fields()[8], value);
      this.arrayField = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'arrayField' field has been set */
    public boolean hasArrayField() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'arrayField' field */
    public org.apache.avro.Interop.Builder clearArrayField() {
      arrayField = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'mapField' field */
    public java.util.Map<java.lang.CharSequence,org.apache.avro.Foo> getMapField() {
      return mapField;
    }
    
    /** Sets the value of the 'mapField' field */
    public org.apache.avro.Interop.Builder setMapField(java.util.Map<java.lang.CharSequence,org.apache.avro.Foo> value) {
      validate(fields()[9], value);
      this.mapField = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'mapField' field has been set */
    public boolean hasMapField() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'mapField' field */
    public org.apache.avro.Interop.Builder clearMapField() {
      mapField = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'unionField' field */
    public java.lang.Object getUnionField() {
      return unionField;
    }
    
    /** Sets the value of the 'unionField' field */
    public org.apache.avro.Interop.Builder setUnionField(java.lang.Object value) {
      validate(fields()[10], value);
      this.unionField = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'unionField' field has been set */
    public boolean hasUnionField() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'unionField' field */
    public org.apache.avro.Interop.Builder clearUnionField() {
      unionField = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'enumField' field */
    public org.apache.avro.Kind getEnumField() {
      return enumField;
    }
    
    /** Sets the value of the 'enumField' field */
    public org.apache.avro.Interop.Builder setEnumField(org.apache.avro.Kind value) {
      validate(fields()[11], value);
      this.enumField = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'enumField' field has been set */
    public boolean hasEnumField() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'enumField' field */
    public org.apache.avro.Interop.Builder clearEnumField() {
      enumField = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'fixedField' field */
    public org.apache.avro.MD5 getFixedField() {
      return fixedField;
    }
    
    /** Sets the value of the 'fixedField' field */
    public org.apache.avro.Interop.Builder setFixedField(org.apache.avro.MD5 value) {
      validate(fields()[12], value);
      this.fixedField = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'fixedField' field has been set */
    public boolean hasFixedField() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'fixedField' field */
    public org.apache.avro.Interop.Builder clearFixedField() {
      fixedField = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'recordField' field */
    public org.apache.avro.Node getRecordField() {
      return recordField;
    }
    
    /** Sets the value of the 'recordField' field */
    public org.apache.avro.Interop.Builder setRecordField(org.apache.avro.Node value) {
      validate(fields()[13], value);
      this.recordField = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'recordField' field has been set */
    public boolean hasRecordField() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'recordField' field */
    public org.apache.avro.Interop.Builder clearRecordField() {
      recordField = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    public Interop build() {
      try {
        Interop record = new Interop();
        record.intField = fieldSetFlags()[0] ? this.intField : (java.lang.Integer) defaultValue(fields()[0]);
        record.longField = fieldSetFlags()[1] ? this.longField : (java.lang.Long) defaultValue(fields()[1]);
        record.stringField = fieldSetFlags()[2] ? this.stringField : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.boolField = fieldSetFlags()[3] ? this.boolField : (java.lang.Boolean) defaultValue(fields()[3]);
        record.floatField = fieldSetFlags()[4] ? this.floatField : (java.lang.Float) defaultValue(fields()[4]);
        record.doubleField = fieldSetFlags()[5] ? this.doubleField : (java.lang.Double) defaultValue(fields()[5]);
        record.bytesField = fieldSetFlags()[6] ? this.bytesField : (java.nio.ByteBuffer) defaultValue(fields()[6]);
        record.nullField = fieldSetFlags()[7] ? this.nullField : (java.lang.Void) defaultValue(fields()[7]);
        record.arrayField = fieldSetFlags()[8] ? this.arrayField : (java.util.List<java.lang.Double>) defaultValue(fields()[8]);
        record.mapField = fieldSetFlags()[9] ? this.mapField : (java.util.Map<java.lang.CharSequence,org.apache.avro.Foo>) defaultValue(fields()[9]);
        record.unionField = fieldSetFlags()[10] ? this.unionField : (java.lang.Object) defaultValue(fields()[10]);
        record.enumField = fieldSetFlags()[11] ? this.enumField : (org.apache.avro.Kind) defaultValue(fields()[11]);
        record.fixedField = fieldSetFlags()[12] ? this.fixedField : (org.apache.avro.MD5) defaultValue(fields()[12]);
        record.recordField = fieldSetFlags()[13] ? this.recordField : (org.apache.avro.Node) defaultValue(fields()[13]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
