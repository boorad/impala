/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.apache.avro.test.namespace;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TestRecord extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TestRecord\",\"namespace\":\"org.apache.avro.test.namespace\",\"fields\":[{\"name\":\"hash\",\"type\":{\"type\":\"fixed\",\"name\":\"MD5\",\"namespace\":\"org.apache.avro.test.util\",\"size\":16}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public org.apache.avro.test.util.MD5 hash;

  /**
   * Default constructor.
   */
  public TestRecord() {}

  /**
   * All-args constructor.
   */
  public TestRecord(org.apache.avro.test.util.MD5 hash) {
    this.hash = hash;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return hash;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: hash = (org.apache.avro.test.util.MD5)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'hash' field.
   */
  public org.apache.avro.test.util.MD5 getHash() {
    return hash;
  }

  /**
   * Sets the value of the 'hash' field.
   * @param value the value to set.
   */
  public void setHash(org.apache.avro.test.util.MD5 value) {
    this.hash = value;
  }

  /** Creates a new TestRecord RecordBuilder */
  public static org.apache.avro.test.namespace.TestRecord.Builder newBuilder() {
    return new org.apache.avro.test.namespace.TestRecord.Builder();
  }
  
  /** Creates a new TestRecord RecordBuilder by copying an existing Builder */
  public static org.apache.avro.test.namespace.TestRecord.Builder newBuilder(org.apache.avro.test.namespace.TestRecord.Builder other) {
    return new org.apache.avro.test.namespace.TestRecord.Builder(other);
  }
  
  /** Creates a new TestRecord RecordBuilder by copying an existing TestRecord instance */
  public static org.apache.avro.test.namespace.TestRecord.Builder newBuilder(org.apache.avro.test.namespace.TestRecord other) {
    return new org.apache.avro.test.namespace.TestRecord.Builder(other);
  }
  
  /**
   * RecordBuilder for TestRecord instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TestRecord>
    implements org.apache.avro.data.RecordBuilder<TestRecord> {

    private org.apache.avro.test.util.MD5 hash;

    /** Creates a new Builder */
    private Builder() {
      super(org.apache.avro.test.namespace.TestRecord.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.apache.avro.test.namespace.TestRecord.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing TestRecord instance */
    private Builder(org.apache.avro.test.namespace.TestRecord other) {
            super(org.apache.avro.test.namespace.TestRecord.SCHEMA$);
      if (isValidValue(fields()[0], other.hash)) {
        this.hash = data().deepCopy(fields()[0].schema(), other.hash);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'hash' field */
    public org.apache.avro.test.util.MD5 getHash() {
      return hash;
    }
    
    /** Sets the value of the 'hash' field */
    public org.apache.avro.test.namespace.TestRecord.Builder setHash(org.apache.avro.test.util.MD5 value) {
      validate(fields()[0], value);
      this.hash = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'hash' field has been set */
    public boolean hasHash() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'hash' field */
    public org.apache.avro.test.namespace.TestRecord.Builder clearHash() {
      hash = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public TestRecord build() {
      try {
        TestRecord record = new TestRecord();
        record.hash = fieldSetFlags()[0] ? this.hash : (org.apache.avro.test.util.MD5) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
